// Copyright 2019 Oath Inc.
// Licensed under the terms of the Apache license. Please see LICENSE.md file distributed with this work for terms.
package com.yahoo.bard.webservice.web.apirequest.binders;

import static com.yahoo.bard.webservice.web.ErrorMessageFormat.INTEGER_INVALID;

import com.yahoo.bard.webservice.util.Incubating;
import com.yahoo.bard.webservice.web.BadApiRequestException;

/**
 * Generator for a count on the data query.
 */
@Incubating
public interface CountGenerator {

    /**
     * Parses the count parameter from the api request into a count value that can be used by the data query.
     *
     * @param count  The count parameter from the api request.
     * @return the parsed count value.
     */
    int generateCount(String count);

    /**
     * Validates the count generated by {@link CountGenerator#generateCount(String)}.
     *
     * @param countRequest  The count parameter from the api request.
     * @param count  The parsed count value.
     */
    void validateCount(String countRequest, int count);

    /**
     * Default implementation of this interface. Requires a positive integer from the api request and simply parses
     * it into an int. If the provided count parameter is NOT a positive integer an exception is thrown.
     */
    CountGenerator DEFAULT_COUNT_GENERATOR = new CountGenerator() {
        @Override
        public int generateCount(String count) {
            try {
                return count == null ? 0 : Integer.parseInt(count);
            } catch (NumberFormatException nfe) {
                throw new BadApiRequestException(INTEGER_INVALID.logFormat(count, "count"), nfe);
            }
        }

        @Override
        public void validateCount(final String countRequest, final int count) {
            // This is the validation part for count that is inlined here because currently it is very brief.
            if (count < 0) {
                throw new BadApiRequestException(INTEGER_INVALID.logFormat(countRequest, "count"));
            }
        }
    };
}
